<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fingers10.EnterpriseArchitecture.API</name>
    </assembly>
    <members>
        <member name="T:Fingers10.EnterpriseArchitecture.API.Controllers.AuthorController">
            <summary>
            Controller to work on Author
            </summary>
        </member>
        <member name="M:Fingers10.EnterpriseArchitecture.API.Controllers.AuthorController.#ctor(Fingers10.EnterpriseArchitecture.ApplicationCore.Utils.Messages)">
            <summary>
            Constructor for Author Controller
            </summary>
            <param name="messages">Message to Dispatch Command</param>
        </member>
        <member name="M:Fingers10.EnterpriseArchitecture.API.Controllers.AuthorController.GetAuthors(Fingers10.EnterpriseArchitecture.API.ResourceParameters.AuthorsResourceParameters)">
            <summary>
            Get the list of authors
            </summary>
            <param name="authorsResourceParameters">author resource parameters</param>
            <returns>An ActionResult of type IEnumerable of AuthorDto</returns>
        </member>
        <member name="M:Fingers10.EnterpriseArchitecture.API.Controllers.AuthorController.GetAuthor(System.Int32)">
            <summary>
            Get the author by id
            </summary>
            <param name="authorId">Id of the author that you want</param>
            <returns>An ActionResult of type AuthorDto</returns>
        </member>
        <member name="M:Fingers10.EnterpriseArchitecture.API.Controllers.AuthorController.CreateAuthor(Fingers10.EnterpriseArchitecture.API.Dtos.CreateAuthorDto,AutoMapper.IMapper)">
            <summary>
            Create a author
            </summary>
            <param name="author">The author to create</param>
            <param name="mapper">Mapper to map objects</param>
            <returns>An ActionResult of type AuthorDto</returns>
        </member>
        <member name="M:Fingers10.EnterpriseArchitecture.API.Controllers.AuthorController.GetAuthorsOptions">
            <summary>
            HTTP Options available on author
            </summary>
            <returns>returns HTTP Options available for author</returns>
        </member>
        <member name="M:Fingers10.EnterpriseArchitecture.API.Controllers.AuthorController.DeleteAuthor(System.Int32)">
            <summary>
            Delete a author
            </summary>
            <param name="authorId">The id of the author to be deleted</param>
            <returns>Nothing</returns>
        </member>
        <member name="T:Fingers10.EnterpriseArchitecture.API.Controllers.BookController">
            <summary>
            Controller to work on Book
            </summary>
        </member>
        <member name="M:Fingers10.EnterpriseArchitecture.API.Controllers.BookController.#ctor(Fingers10.EnterpriseArchitecture.ApplicationCore.Utils.Messages,AutoMapper.IMapper)">
            <summary>
            Constructor for Book Controller
            </summary>
            <param name="messages">Message to Dispatch Command</param>
            <param name="mapper">mapper to map objects</param>
        </member>
        <member name="M:Fingers10.EnterpriseArchitecture.API.Controllers.BookController.GetBooksForAuthor(System.Int64)">
            <summary>
            Get the list of books for author
            </summary>
            <param name="authorId">The Author Id for which books are needed</param>
            <returns>An ActionResult of type IEnumerable of BookDto</returns>
        </member>
        <member name="M:Fingers10.EnterpriseArchitecture.API.Controllers.BookController.GetBookForAuthor(System.Int64,System.Int64)">
            <summary>
            Get the book by id
            </summary>
            <param name="authorId">Id of the author that you want</param>
            <param name="bookId">Id of the book that you want</param>
            <returns>An ActionResult of type BookDto</returns>
        </member>
        <member name="M:Fingers10.EnterpriseArchitecture.API.Controllers.BookController.CreateBookForAuthor(System.Int64,Fingers10.EnterpriseArchitecture.ApplicationCore.Dtos.CreateBookDto)">
            <summary>
            Create a book for author
            </summary>
            <param name="authorId">The author id to whom book needs to be created</param>
            <param name="book">Create Book Dto</param>
            <returns>An ActionResult of type BookDto</returns>
        </member>
        <member name="M:Fingers10.EnterpriseArchitecture.API.Controllers.BookController.UpdateBookForAuthor(System.Int64,System.Int64,Fingers10.EnterpriseArchitecture.API.Dtos.BookForUpdateDto)">
            <summary>
            Update a book for author
            </summary>
            <param name="authorId">The author id to whom book needs to be updated</param>
            <param name="bookId">The id of the book to be updated</param>
            <param name="book">Book For Update Dto</param>
            <returns>An ActionResult of type BookDto or Nothing</returns>
        </member>
        <member name="M:Fingers10.EnterpriseArchitecture.API.Controllers.BookController.PartiallyUpdateBookForAuthor(System.Int64,System.Int64,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Fingers10.EnterpriseArchitecture.API.Dtos.BookForUpdateDto})">
             <summary>
             Update a book for author
             </summary>
             <param name="authorId">The author id to whom book needs to be updated</param>
             <param name="bookId">The id of the book to be updated</param>
             <param name="patchDocument">Book Patch Document</param>
            
             <remarks>Sample request (this request updates the book's **title**)  
             
             PATCH /authors/authorId/books/bookId
             [ 
                 {
                     "op": "replace", 
                     "path": "/title", 
                     "value": "new title" 
                 } 
             ] 
             </remarks>
             <returns>An ActionResult of type BookDto or Nothing</returns>
        </member>
        <member name="M:Fingers10.EnterpriseArchitecture.API.Controllers.BookController.DeleteBookForAuthor(System.Int64,System.Int64)">
            <summary>
            Delete a book
            </summary>
            <param name="authorId">The author id of the book to be deleted</param>
            <param name="bookId">The id of the book to be deleted</param>
            <returns>Nothing</returns>
        </member>
        <member name="T:Fingers10.EnterpriseArchitecture.API.Startup">
            <summary>
            Startup that gets called on application start to setup services and request middlewares
            </summary>
        </member>
        <member name="M:Fingers10.EnterpriseArchitecture.API.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for Startup
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:Fingers10.EnterpriseArchitecture.API.Startup.Configuration">
            <summary>
            Appsettings Configuration
            </summary>
        </member>
        <member name="M:Fingers10.EnterpriseArchitecture.API.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container. For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Fingers10.EnterpriseArchitecture.API.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="apiVersionDescriptionProvider"></param>
        </member>
        <member name="T:Fingers10.EnterpriseArchitecture.API.Utils.HandlerRegistration">
            <summary>
            Handler Registration Utility
            </summary>
        </member>
        <member name="M:Fingers10.EnterpriseArchitecture.API.Utils.HandlerRegistration.AddHandlers(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Handler to register command handlers
            </summary>
            <param name="services"></param>
        </member>
    </members>
</doc>
